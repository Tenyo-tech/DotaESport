@using DotaESport.Common
@model DotaESport.Web.ViewModels.Articles.ArticleViewModel
@{
    this.ViewData["Title"] = Model.Title;
    void DisplayComments(int? parentId)
    {
        var comments = this.Model.Comments.Where(x => x.ParentId == parentId);
        if (!comments.Any())
        {
            return;
        }
        @foreach (var comment in comments)
        {
            <div class="container-fluid mt-100">
                <div class="row">
                    <div class="col-md-12">
                        <div class="card mb-4">
                            <div class="card-header">
                                <div class="media flex-wrap w-100 align-items-center">
                                    <img src="https://res.cloudinary.com/dxfq3iotg/image/upload/v1574583246/AAA/2.jpg" class="d-block ui-w-40 rounded-circle" alt="">
                                    <div class="media-body ml-3">
                                        @comment.UserUserName
                                        <div class="text-muted small">
                                            <time datetime="@comment.CreatedOn.ToString("O")"></time>
                                        </div>
                                    </div>
                                    <div class="text-muted small ml-3">
                                        @if (this.User.Identity.IsAuthenticated)
                                        {
                                            <div class="px-4 pt-3"> <button type="button" class="btn btn-secondary" onclick="showAddCommentForm(@comment.Id)"><i class="fa fa-plus"></i>&nbsp; Answer</button> </div>
                                        }
                                    </div>
                                </div>
                            </div>
                            <div class="card-body">
                                <article>
                                    @Html.Raw(comment.SanitizedContent)
                                </article>
                                @{ DisplayComments(comment.Id); }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    }
}








<div class="container-fluid mt-100">
    <div class="row">
        <div class="col-md-12">
            <div class="card mb-4">
                <div class="card-header">
                    <div class="media flex-wrap w-100 align-items-center">
                        <img src="https://res.cloudinary.com/dxfq3iotg/image/upload/v1574583246/AAA/2.jpg" class="d-block ui-w-40 rounded-circle" alt="">
                        <div class="media-body ml-3">
                            @Model.UserUserName
                            <div class="text-muted small">@Model.CreatedOn</div>
                        </div>
                        <div class="text-muted small ml-3">
                            <form id="votesForm" method="post"></form>
                            <div>
                                <a href="#" onclick="sendVote(@Model.Id, true)">
                                    <i class="fa fa-thumbs-up"></i>
                                </a>
                            </div>
                            <div id="votesCount">@Model.VotesCount</div>
                            <div>
                                <a href="#" onclick="sendVote(@Model.Id, false)">
                                    <i class="fa fa-thumbs-down"></i>
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <img src="@Model.ImgUrl" class="img-fluid" />
                    <article>
                        @Html.Raw(Model.SanitizedContent)
                    </article>
                    @if (this.User.Identity.IsAuthenticated)
                    {
                        <div class="px-4 pt-3"> <button type="button" class="btn btn-primary float-right" onclick="showAddCommentForm(0)"><i class="fa fa-plus"></i>&nbsp; Comment</button> </div>
                        <div class="clearfix"></div>
                    }
                    @{ DisplayComments(null); }
                </div>
            </div>
        </div>
    </div>
</div>


<script src="/lib/tinymce/tinymce.min.js" type="text/javascript"></script>
<script type="text/javascript">
    tinymce.init({
        selector: "textarea",
        plugins: [
            "image paste table link code media"
        ]
    });
</script>

<div id="AddCommentForm" style="display: none">
    <form asp-controller="Comments" asp-action="Create" method="post">
        <div>
            <input type="hidden" name="ArticleId" value="@this.Model.Id" />
        </div>
        <div>
            <label for="Content"></label>
            <textarea name="Content" id="Content" class="form-control"></textarea>
        </div>
        <div>
            <input type="submit" class="btn btn-primary" value="Add comment" />
        </div>
    </form>
</div>

@section Scripts {
    <script>
        function showAddCommentForm() {
            $("#AddCommentForm").toggle();
        }

        function sendVote(articleId, isUpVote) {
            var token = $("#votesForm input[name=__RequestVerificationToken]").val();
            var json = { articleId: articleId, isUpVote: isUpVote };
            $.ajax({
                url: "/api/votes",
                type: "POST",
                data: JSON.stringify(json),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                headers: { 'X-CSRF-TOKEN': token },
                success: function (data) {
                    $("#votesCount").html(data.votesCount);
                }
            });
        }
    </script>
}